h1. jira-cards

A command line tool for generating scrum cards from jira. It allows you to customise the styling of the scrum cards using an erb template. 

h1. Installation 

You are going to need to

* install the jira-cards gem <pre>gem install jira-cards</pre>
* "Enable the jira RPC-Plugin":http://confluence.atlassian.com/display/JIRA/JIRA+XML-RPC+Overview
* Install "wkhtmltopdf":http://code.google.com/p/wkhtmltopdf/ 

h1. Configuration 

When you first run the tool it will ask you:

* The url to your jira instance e.g. jira.atlassian.com
* A username & password for accessing jira. Whatever user you use must be an admin
* Path to the wkhtmltopdf e.g. C:\\Program Files\\wkhtmltopdf\\wkhtmltopdf.exe 
* If you want to use the default templates
** If no, the path to the template erb & css file

These values are then written to a config.yml file. If you run the command it will tell you where the config file is if you want to change it. 


h1. Example commands

The two commands are issues and iteration. For both commands you need to specify the output flag which is the path where you want the output pdf file to go to. 

h2. Issues 

You want this command if you want to print specific issues. The only flag is --keys which are the key's of the issues you want. e.g. 

<pre>
jira-cards issues --keys "foo-1, foo-4, foo-10" --output c:\temp\test.pdf
</pre>

You can also specify ranges (a la "ruby ranges":http://www.ruby-doc.org/core/classes/Range.html) of keys e.g.

<pre>
jira-cards issues --keys foo-4..foo-10 --output c:\temp\test.pdf
</pre> 

h2. Iteration

You want this if you want to get all of the cards for an iteration (or version in jira-speak). The flags are:

* --project
* --version

<pre>
jira-cards iteration --project "Some project" --version "Iteration 30" --output c:\temp\test.pdf
</pre>

h1. Templates

